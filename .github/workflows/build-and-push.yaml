name: Build & Push Docker Image

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Which version to bump (major/minor/patch)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-and-pr:
    runs-on: [self-hosted, Linux, X64, local-minikube]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read current VERSION
        id: get_version
        run: |
          CURRENT_VERSION=$(cat VERSION)
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "service=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_OUTPUT

      - name: Calculate new VERSION
        id: bump_version
        run: |
          IFS='.' read -r MAJ MIN PATCH <<< "${{ steps.get_version.outputs.current }}"
          LEVEL="${{ github.event.inputs.level }}"
          case "$LEVEL" in
            major) MAJ=$((MAJ+1)); MIN=0; PATCH=0 ;;
            minor) MIN=$((MIN+1)); PATCH=0 ;;
            patch) PATCH=$((PATCH+1)) ;;
          esac
          NEW_VERSION="$MAJ.$MIN.$PATCH"
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update VERSION file
        run: |
          echo "${{ steps.bump_version.outputs.new }}" > VERSION
          git config --local user.email "ci@example.com"
          git config --local user.name "CI Bot"
          git add VERSION
          git commit -m "Release ${{ steps.bump_version.outputs.new }}" || echo "No changes to commit"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Release ${{ steps.bump_version.outputs.new }}"
          branch: "release/${{ steps.bump_version.outputs.new }}"
          title: "Release ${{ steps.bump_version.outputs.new }}"
          body: "Automated PR for version bump to ${{ steps.bump_version.outputs.new }}"
          base: main

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: |
          IMAGE="one290/shadowchats:${{ steps.get_version.outputs.service }}-v${{ steps.bump_version.outputs.new }}"
          echo "Building Docker image $IMAGE"
          docker build -t $IMAGE .

      - name: Push Docker image
        run: |
          IMAGE="one290/shadowchats:${{ steps.get_version.outputs.service }}-v${{ steps.bump_version.outputs.new }}"
          echo "Pushing Docker image $IMAGE"
          docker push $IMAGE
