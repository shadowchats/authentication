name: Build & Push Docker Image

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Which version to bump (major/minor/patch)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-and-push:
    runs-on: [self-hosted, Linux, X64, local-minikube]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # нужен полный history для пуша коммитов

      - name: Read current VERSION
        id: get_version
        run: |
          CURRENT_VERSION=$(cat VERSION)
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "service=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_OUTPUT

      - name: Calculate new VERSION
        id: bump_version
        run: |
          IFS='.' read -r MAJ MIN PATCH <<< "${{ steps.get_version.outputs.current }}"
          LEVEL="${{ github.event.inputs.level }}"

          case "$LEVEL" in
            major) MAJ=$((MAJ+1)); MIN=0; PATCH=0 ;;
            minor) MIN=$((MIN+1)); PATCH=0 ;;
            patch) PATCH=$((PATCH+1)) ;;
          esac

          NEW_VERSION="$MAJ.$MIN.$PATCH"
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Docker image (multi-arch)
        run: |
          IMAGE="one290/shadowchats:${{ steps.get_version.outputs.service }}-v${{ steps.bump_version.outputs.new }}"
          echo "Building and pushing image $IMAGE"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t $IMAGE \
            --push .

      - name: Update VERSION file
        run: |
          echo "${{ steps.bump_version.outputs.new }}" > VERSION

          git config --local user.email "ci@example.com"
          git config --local user.name "CI Bot"
          git add VERSION
          git commit -m "Release ${{ steps.bump_version.outputs.new }}"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:main
